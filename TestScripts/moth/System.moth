namespace Moth;

public class Sys {

    static Write(string #char*, end #char, file #void*) #void {
        local toPrint #char* = malloc(#u32 <- 10000);
        sprintf(toPrint, "%s%c", string, end);
        fputs(toPrint, file);
        fflush(file);
        free(toPrint);
        return;
    }

    static WriteLine(string #char*) #void {
        #Sys.WriteLine(string, stdout());
        return;
    }

    static WriteLine(string #char*, file #void*) #void {
        #Sys.Write(string, '\n', file);
        return;
    }

    static GetChar(file #void*) #char {
        local ch #i32 = fgetc(file);

        if !eof(ch) {
            return #char <- ch;
        } else {
            return '\0';
        }
    }

    static ReadLine(file #void*) #char* {
        local size #u32 = 512;
        local string #char* = malloc(size);
        local ch #char = #Sys.GetChar(file);
        local len #i32 = -1;

        if string == null {
            return string;
        }

        while ch != '\0' {
            string[++len] = ch;
            
            if len >= #i32 <- size {
                string = realloc(string, size = size + #u32 <- 512);

                if string == null {
                    return string;
                }
            }

            if ch == '\n' {
                ch = '\0';
            } else {
                ch = #Sys.GetChar(file);
            }
        }

        string[++len] = ch;
        string = realloc(string, #u32 <- ++len);
        return string;
    }

    static Input(string #char*) #char* {
        return #Sys.Input(string, stdout(), stdin());
    }

    static Input(string #char*, ouput #void*, input #void*) #char* {
        #Sys.Write(string, '\0', ouput);
        return #Sys.ReadLine(input);
    }
}